{"ast":null,"code":"var _jsxFileName = \"F:\\\\job_board\\\\src\\\\components\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport JobCard from './JobCard';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'http://localhost:5000'; // Change to your backend URL/port\n\nfunction JobList() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(`${API}/jobs`); // Adjust endpoint as needed\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : jobs.map(job => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/jobs/${job._id}`,\n      className: \"job-link\",\n      children: /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, job._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(JobList, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","axios","JobCard","Link","jsxDEV","_jsxDEV","API","JobList","_s","jobs","setJobs","fetchJobs","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","to","_id","_c","$RefreshReg$"],"sources":["F:/job_board/src/components/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport JobCard from './JobCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst API = 'http://localhost:5000'; // Change to your backend URL/port\r\n\r\nfunction JobList() {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(`${API}/jobs`); // Adjust endpoint as needed\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching jobs:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"job-list\">\r\n      <h2>Available Jobs</h2>\r\n      {jobs.length === 0 ? (\r\n        <p>No jobs available.</p>\r\n      ) : (\r\n        jobs.map(job => (\r\n          <Link to={`/jobs/${job._id}`} key={job._id} className=\"job-link\">\r\n            <JobCard job={job} />\r\n          </Link>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAG,uBAAuB,CAAC,CAAC;;AAErC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGP,GAAG,OAAO,CAAC,CAAC,CAAC;MACjDI,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBb,IAAI,CAACc,MAAM,KAAK,CAAC,gBAChBlB,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEzBb,IAAI,CAACe,GAAG,CAACC,GAAG,iBACVpB,OAAA,CAACF,IAAI;MAACuB,EAAE,EAAE,SAASD,GAAG,CAACE,GAAG,EAAG;MAAeV,SAAS,EAAC,UAAU;MAAAC,QAAA,eAC9Db,OAAA,CAACH,OAAO;QAACuB,GAAG,EAAEA;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADYG,GAAG,CAACE,GAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpC,CACP,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CA9BQD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAgChB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}